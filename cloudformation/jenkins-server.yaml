AWSTemplateFormatVersion: "2010-09-09"
Description: this template creates a VPC, an internet gateway, Security Group and an EC2 instance which install a Jenkins server
Parameters:
  VpcCIDR:
    Description: Vpc CIDR
    Type: String
    Default: 10.0.0.0/16
  EnvironmentName:
    Description: Environment name
    Type: String
    Default: Capstone
  SubnetCIDR:
    Type: String
    Description: CIDR for the subnet
    Default: 10.0.0.0/24
  AmiId:
    Type: String
    Description: Server AMI id
    Default: ami-03d5c68bab01f3496
Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCIDR
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: !Ref EnvironmentName
  InternetGateway:
    Description: Internet Gateway providing access for the VPC resources
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Ref EnvironmentName
  VPCGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Description: VPC's Attachment of the internet gateway
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway
  PublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [0, !GetAZs ""]
      CidrBlock: !Ref SubnetCIDR
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Public Subnet
  RouteTable:
    Description: public route table attached to the VPC
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Ref EnvironmentName
  PublicRoute:
    Description: rule to direct all traffic to internet Gateway
    Type: AWS::EC2::Route
    DependsOn: VPCGatewayAttachment
    Properties:
      RouteTableId: !Ref RouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
  RouteTableAssociation:
    Description: associating public route table with public subnet
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref RouteTable
      SubnetId: !Ref PublicSubnet
  JenkinsServerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow http traffic to our hosts and SSH from local only
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 8080
          ToPort: 8080
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 0
          ToPort: 65535
          CidrIp: 0.0.0.0/0
  LaunchConfiguration:
    Type: AWS::AutoScaling::LaunchConfiguration
    Description: Initial server configuration
    DependsOn: JenkinsServerSecurityGroup
    Properties:
      KeyName: capstone
      ImageId: !Ref AmiId
      InstanceType: "t2.micro"
      SecurityGroups:
        - Ref: JenkinsServerSecurityGroup
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          sudo apt-get update -y
          sudo apt install -y default-jdk
          sudo wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | apt-key add -
          sudo sh -c 'echo deb https://pkg.jenkins.io/debian binary/ > /etc/apt/sources.list.d/jenkins.list'
          sudo apt-get update -y
          sudo apt-get install -y jenkins
          sudo systemctl start jenkins
          sudo apt-get update -y
          sudo apt-get install -y apt-transport-https ca-certificates curl gnupg-agent software-properties-common
          sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add -
          sudo apt-key fingerprint 0EBFCD88
          sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
          sudo apt-get update -y
          sudo apt-get install -y docker-ce docker-ce-cli containerd.io
          sudo apt-get install unzip -y
          sudo curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "/tmp/awscliv2.zip"
          sudo unzip /tmp/awscliv2.zip
          sudo ./aws/install -i /usr/local/aws-cli -b /usr/bin
          sudo curl --silent --location "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C /tmp
          sudo mv /tmp/eksctl /usr/local/bin
          sudo curl -LO https://storage.googleapis.com/kubernetes-release/release/`curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt`/bin/linux/amd64/kubectl
          sudo chmod +x ./kubectl
          sudo mv ./kubectl /usr/local/bin/kubectl
          sudo sermod -aG docker jenkins
          sudo systemctl restart jenkins
  JenkinsScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      MinSize: 1
      MaxSize: 1
      VPCZoneIdentifier:
        - !Ref PublicSubnet
      LaunchConfigurationName:
        Ref: LaunchConfiguration